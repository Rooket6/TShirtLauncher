// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc2813.TshirtLauncher.subsystems;

import org.usfirst.frc2813.TshirtLauncher.RobotMap;
import org.usfirst.frc2813.TshirtLauncher.commands.ReleaseAir;

import edu.wpi.first.wpilibj.Relay;
import edu.wpi.first.wpilibj.Solenoid;
import edu.wpi.first.wpilibj.command.Subsystem;

/**
 * I am using this subsystem as an interface for the commands that pertain to launching shirts
 * All shared variables are created with get set accessors (only delay right now)
 * The actions to change the state of the relays and solenoid print to console for debugging purposes
 */
public class ShirtLauncher extends Subsystem {
	
	public Solenoid solenoid = RobotMap.solenoid;
	public Relay relay1 = RobotMap.leftRelay;
	public Relay relay2 = RobotMap.rightRelay;
	private static double delay = 0.1;

	// Put methods for controlling this subsystem
	// here. Call these from Commands.

	public void initDefaultCommand() {
		// Set the default command for a subsystem here.
		setDefaultCommand(new ReleaseAir()); // This command will run when the subsystem is
											 // idle (ShootLeft and ShootRight not running)
	}

	public double getDelay() {
		return delay;
	}

	public void setDelay(double delay) {
		ShirtLauncher.delay = delay;
	}
	
	// Relay 1 Controls
	public void shootLeft() {
		relay1.set(Relay.Value.kForward);
		System.out.println("shootLeft-kForward");
	}

	public void retractLeft() {
		relay1.set(Relay.Value.kOff);
		System.out.println("retractLeft-Reverse");
	}

	// Relay 2 Controls
	public void shootRight() {
		relay2.set(Relay.Value.kForward);
		System.out.println("shootRight-kForward");
	}

	public void retractRight() {
		relay2.set(Relay.Value.kOff);
		System.out.println("retractRight-Reverse");
	}
	
	// Solenoid Controls
	public void toggleSolenoid() {
		solenoid.set(!solenoid.get());
		System.out.println("solenoid-Toggle");
	}

	public void solenoidOn() {
		solenoid.set(true);
		System.out.println("solenoid-On");
	}

	public void solenoidOff() {
		solenoid.set(false);
		System.out.println("solenoid-Off");
	}

}
